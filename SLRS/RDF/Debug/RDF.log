Der Buildvorgang wurde am 18.10.2016 17:39:13 gestartet.
     1>Projekt "C:\Users\Martin\Documents\Visual Studio 2013\Projects\netica\SLRS\RDF\RDF.vcxproj" auf Knoten "2", Rebuild Ziel(e).
     1>ClCompile:
         C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\bin\CL.exe /c /AI"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5\\" /AI"C:\Program Files (x86)\Windows Kits\8.1\References\CommonConfiguration\Neutral" /AI"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5\Facades\\" /Zi /clr /nologo /W3 /WX- /Od /Oy- /D WIN32 /D _DEBUG /D _WINDLL /D _UNICODE /D UNICODE /EHa /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Yc"stdafx.h" /Fp"Debug\RDF.pch" /Fo"Debug\\" /Fd"Debug\vc120.pdb" /TP /FU"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5\mscorlib.dll" /FU"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5\System.Data.dll" /FU"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5\System.dll" /FU"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5\System.Xml.dll" /analyze- /errorReport:prompt /clr:nostdlib Stdafx.cpp
         Stdafx.cpp
         C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\bin\CL.exe /c /AI"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5\\" /AI"C:\Program Files (x86)\Windows Kits\8.1\References\CommonConfiguration\Neutral" /AI"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5\Facades\\" /Zi /clr /nologo /W3 /WX- /Od /Oy- /D WIN32 /D _DEBUG /D _WINDLL /D _UNICODE /D UNICODE /EHa /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Fo"Debug\\" /Fd"Debug\vc120.pdb" /TP /FU"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5\mscorlib.dll" /FU"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5\System.Data.dll" /FU"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5\System.dll" /FU"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5\System.Xml.dll" /analyze- /errorReport:prompt /clr:nostdlib AssemblyInfo.cpp Data.cpp DataChar.cpp DataDouble.cpp DataFloat.cpp Tree.cpp TreeClassification.cpp TreeProbability.cpp TreeRegression.cpp TreeSurvival.cpp
         AssemblyInfo.cpp
         Data.cpp
         DataChar.cpp
         DataDouble.cpp
         DataFloat.cpp
         Tree.cpp
     1>Tree.cpp(171): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'size_t', möglicher Datenverlust
     1>Tree.cpp(172): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'size_t', möglicher Datenverlust
     1>Tree.cpp(293): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'size_t', möglicher Datenverlust
     1>Tree.cpp(294): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'size_t', möglicher Datenverlust
     1>Tree.cpp(343): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'size_t', möglicher Datenverlust
     1>Tree.cpp(344): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'size_t', möglicher Datenverlust
     1>Tree.cpp(376): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'size_t', möglicher Datenverlust
     1>Tree.cpp(380): warning C4244: 'Argument': Konvertierung von 'double' in 'unsigned int', möglicher Datenverlust
     1>Tree.cpp(452): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'size_t', möglicher Datenverlust
     1>Tree.cpp(468): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'size_t', möglicher Datenverlust
         TreeClassification.cpp
     1>TreeClassification.cpp(362): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'size_t', möglicher Datenverlust
     1>TreeClassification.cpp(375): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'size_t', möglicher Datenverlust
         TreeProbability.cpp
     1>TreeProbability.cpp(370): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'size_t', möglicher Datenverlust
     1>TreeProbability.cpp(383): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'size_t', möglicher Datenverlust
         TreeRegression.cpp
     1>TreeRegression.cpp(332): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'size_t', möglicher Datenverlust
     1>TreeRegression.cpp(345): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'size_t', möglicher Datenverlust
     1>TreeRegression.cpp(441): warning C4244: '=': Konvertierung von 'double' in 'size_t', möglicher Datenverlust
         TreeSurvival.cpp
     1>TreeSurvival.cpp(252): warning C4244: '=': Konvertierung von 'double' in 'size_t', möglicher Datenverlust
     1>TreeSurvival.cpp(423): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'size_t', möglicher Datenverlust
     1>TreeSurvival.cpp(439): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'size_t', möglicher Datenverlust
     1>C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\numeric(20): warning C4244: '=': Konvertierung von 'double' in 'int', möglicher Datenverlust
                 C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\numeric(31): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "_Ty std::_Accumulate<double*,_Ty,_Fn2>(_InIt,_InIt,_Ty,_Fn2)".
                 with
                 [
                     _Ty=int
         ,            _Fn2=std::plus<void>
         ,            _InIt=double *
                 ]
                 C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\numeric(39): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "_Ty std::accumulate<_InIt,_Ty,std::plus<void>>(_InIt,_InIt,_Ty,_Fn2)".
                 with
                 [
                     _Ty=int
         ,            _InIt=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double>>>
         ,            _Fn2=std::plus<void>
                 ]
                 TreeSurvival.cpp(103): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "_Ty std::accumulate<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double>>>,int>(_InIt,_InIt,_Ty)".
                 with
                 [
                     _Ty=int
         ,            _InIt=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double>>>
                 ]
         Code wird generiert...
         C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\bin\CL.exe /c /Zi /nologo /W3 /WX- /Od /Oy- /D WIN32 /D _DEBUG /D _WINDLL /D _UNICODE /D UNICODE /EHa /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Fo"Debug\\" /Fd"Debug\vc120.pdb" /TP /analyze- /errorReport:prompt Forest.cpp ForestClassification.cpp ForestProbability.cpp ForestRegression.cpp ForestSurvival.cpp RDF.cpp
         Forest.cpp
     1>Forest.cpp(881): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'uint', möglicher Datenverlust
         ForestClassification.cpp
     1>ForestClassification.cpp(74): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'unsigned long', möglicher Datenverlust
         ForestProbability.cpp
     1>ForestProbability.cpp(68): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'unsigned long', möglicher Datenverlust
         ForestRegression.cpp
     1>ForestRegression.cpp(69): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'unsigned long', möglicher Datenverlust
         ForestSurvival.cpp
     1>ForestSurvival.cpp(81): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'unsigned long', möglicher Datenverlust
         RDF.cpp
     1>RDF.cpp(23): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'int', möglicher Datenverlust
         Code wird generiert...
         C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\bin\CL.exe /c /Zi /clr /nologo /W3 /WX- /Od /Oy- /D WIN32 /D _DEBUG /D _WINDLL /D _UNICODE /D UNICODE /EHa /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Fo"Debug\\" /Fd"Debug\vc120.pdb" /TP /analyze- /errorReport:prompt "C:\Users\Martin\AppData\Local\Temp\.NETFramework,Version=v4.5.AssemblyAttributes.cpp"
         .NETFramework,Version=v4.5.AssemblyAttributes.cpp
       ResourceCompile:
         C:\Program Files (x86)\Windows Kits\8.1\bin\x86\rc.exe /D _UNICODE /D UNICODE /l"0x0409" /nologo /fo"Debug\app.res" app.rc 
       Link:
         C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\bin\link.exe /ERRORREPORT:PROMPT /OUT:"C:\Users\Martin\Documents\Visual Studio 2013\Projects\netica\SLRS\Debug\RDF.dll" /INCREMENTAL /NOLOGO /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:\Users\Martin\Documents\Visual Studio 2013\Projects\netica\SLRS\Debug\RDF.pdb" /ASSEMBLYDEBUG /TLBID:1 /DYNAMICBASE /FIXED:NO /NXCOMPAT /MACHINE:X86 /DLL Debug\app.res
         Debug\AssemblyInfo.obj
         Debug\Data.obj
         Debug\DataChar.obj
         Debug\DataDouble.obj
         Debug\DataFloat.obj
         Debug\Forest.obj
         Debug\ForestClassification.obj
         Debug\ForestProbability.obj
         Debug\ForestRegression.obj
         Debug\ForestSurvival.obj
         Debug\RDF.obj
         Debug\Stdafx.obj
         Debug\Tree.obj
         Debug\TreeClassification.obj
         Debug\TreeProbability.obj
         Debug\TreeRegression.obj
         Debug\TreeSurvival.obj
         "Debug\.NETFramework,Version=v4.5.AssemblyAttributes.obj"
            Bibliothek "C:\Users\Martin\Documents\Visual Studio 2013\Projects\netica\SLRS\Debug\RDF.lib" und Objekt "C:\Users\Martin\Documents\Visual Studio 2013\Projects\netica\SLRS\Debug\RDF.exp" werden erstellt.
     1>Data.obj : error LNK2028: Nicht aufgel÷stes Token (0A00068C) ""unsigned int __cdecl roundToNextMultiple(unsigned int,unsigned int)" (?roundToNextMultiple@@$$FYAIII@Z)", auf das in Funktion ""public: void __thiscall Data::addSparseData(unsigned char *,unsigned int)" (?addSparseData@Data@@$$FQAEXPAEI@Z)" verwiesen wird.
     1>Tree.obj : error LNK2028: Nicht aufgel÷stes Token (0A000575) ""void __cdecl shuffleAndSplit(class std::vector<unsigned int,class std::allocator<unsigned int> > &,class std::vector<unsigned int,class std::allocator<unsigned int> > &,unsigned int,unsigned int,class std::mersenne_twister_engine<unsigned __int64,64,312,156,31,-5403634167711393303,29,6148914691236517205,17,8202884508482404352,37,-2270628950310912,43,6364136223846793005>)" (?shuffleAndSplit@@$$FYAXAAV?$vector@IV?$allocator@I@std@@@std@@0IIV?$mersenne_twister_engine@_K$0EA@$0BDI@$0JM@$0BP@$0?EKPNJAKFFGJJOGBH@$0BN@$0FFFFFFFFFFFFFFFF@$0BB@$0HBNGHPPPONKGAAAA@$0CF@$0?IBBCAAAAAAAAA@$0CL@$0FIFBPECNEMJFHPCN@@2@@Z)", auf das in Funktion ""protected: void __thiscall Tree::bootstrapWithoutReplacement(void)" (?bootstrapWithoutReplacement@Tree@@$$FIAEXXZ)" verwiesen wird.
     1>Tree.obj : error LNK2028: Nicht aufgel÷stes Token (0A00057A) ""void __cdecl drawWithoutReplacementWeighted(class std::vector<unsigned int,class std::allocator<unsigned int> > &,class std::mersenne_twister_engine<unsigned __int64,64,312,156,31,-5403634167711393303,29,6148914691236517205,17,8202884508482404352,37,-2270628950310912,43,6364136223846793005> &,unsigned int,unsigned int,class std::vector<double,class std::allocator<double> > &)" (?drawWithoutReplacementWeighted@@$$FYAXAAV?$vector@IV?$allocator@I@std@@@std@@AAV?$mersenne_twister_engine@_K$0EA@$0BDI@$0JM@$0BP@$0?EKPNJAKFFGJJOGBH@$0BN@$0FFFFFFFFFFFFFFFF@$0BB@$0HBNGHPPPONKGAAAA@$0CF@$0?IBBCAAAAAAAAA@$0CL@$0FIFBPECNEMJFHPCN@@2@IIAAV?$vector@NV?$allocator@N@std@@@2@@Z)", auf das in Funktion ""protected: void __thiscall Tree::bootstrapWithoutReplacementWeighted(void)" (?bootstrapWithoutReplacementWeighted@Tree@@$$FIAEXXZ)" verwiesen wird.
     1>Tree.obj : error LNK2028: Nicht aufgel÷stes Token (0A00057B) ""void __cdecl drawWithoutReplacementWeighted(class std::vector<unsigned int,class std::allocator<unsigned int> > &,class std::mersenne_twister_engine<unsigned __int64,64,312,156,31,-5403634167711393303,29,6148914691236517205,17,8202884508482404352,37,-2270628950310912,43,6364136223846793005> &,class std::vector<unsigned int,class std::allocator<unsigned int> > &,unsigned int,class std::vector<double,class std::allocator<double> > &)" (?drawWithoutReplacementWeighted@@$$FYAXAAV?$vector@IV?$allocator@I@std@@@std@@AAV?$mersenne_twister_engine@_K$0EA@$0BDI@$0JM@$0BP@$0?EKPNJAKFFGJJOGBH@$0BN@$0FFFFFFFFFFFFFFFF@$0BB@$0HBNGHPPPONKGAAAA@$0CF@$0?IBBCAAAAAAAAA@$0CL@$0FIFBPECNEMJFHPCN@@2@0IAAV?$vector@NV?$allocator@N@std@@@2@@Z)", auf das in Funktion ""protected: void __thiscall Tree::createPossibleSplitVarSubset(class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?createPossibleSplitVarSubset@Tree@@$$FIAEXAAV?$vector@IV?$allocator@I@std@@@std@@@Z)" verwiesen wird.
     1>Tree.obj : error LNK2028: Nicht aufgel÷stes Token (0A0005A3) ""void __cdecl drawWithoutReplacementSkip(class std::vector<unsigned int,class std::allocator<unsigned int> > &,class std::mersenne_twister_engine<unsigned __int64,64,312,156,31,-5403634167711393303,29,6148914691236517205,17,8202884508482404352,37,-2270628950310912,43,6364136223846793005> &,unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &,unsigned int)" (?drawWithoutReplacementSkip@@$$FYAXAAV?$vector@IV?$allocator@I@std@@@std@@AAV?$mersenne_twister_engine@_K$0EA@$0BDI@$0JM@$0BP@$0?EKPNJAKFFGJJOGBH@$0BN@$0FFFFFFFFFFFFFFFF@$0BB@$0HBNGHPPPONKGAAAA@$0CF@$0?IBBCAAAAAAAAA@$0CL@$0FIFBPECNEMJFHPCN@@2@I0I@Z)", auf das in Funktion ""protected: void __thiscall Tree::createPossibleSplitVarSubset(class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?createPossibleSplitVarSubset@Tree@@$$FIAEXAAV?$vector@IV?$allocator@I@std@@@std@@@Z)" verwiesen wird.
     1>TreeClassification.obj : error LNK2028: Nicht aufgel÷stes Token (0A000670) ""double __cdecl mostFrequentValue(class std::unordered_map<double,unsigned int,struct std::hash<double>,struct std::equal_to<double>,class std::allocator<struct std::pair<double const ,unsigned int> > > &,class std::mersenne_twister_engine<unsigned __int64,64,312,156,31,-5403634167711393303,29,6148914691236517205,17,8202884508482404352,37,-2270628950310912,43,6364136223846793005>)" (?mostFrequentValue@@$$FYANAAV?$unordered_map@NIU?$hash@N@std@@U?$equal_to@N@2@V?$allocator@U?$pair@$$CBNI@std@@@2@@std@@V?$mersenne_twister_engine@_K$0EA@$0BDI@$0JM@$0BP@$0?EKPNJAKFFGJJOGBH@$0BN@$0FFFFFFFFFFFFFFFF@$0BB@$0HBNGHPPPONKGAAAA@$0CF@$0?IBBCAAAAAAAAA@$0CL@$0FIFBPECNEMJFHPCN@@2@@Z)", auf das in Funktion ""public: double __thiscall TreeClassification::estimate(unsigned int)" (?estimate@TreeClassification@@$$FQAENI@Z)" verwiesen wird.
     1>TreeSurvival.obj : error LNK2028: Nicht aufgel÷stes Token (0A0005C1) ""class std::vector<double,class std::allocator<double> > __cdecl adjustPvalues(class std::vector<double,class std::allocator<double> > &)" (?adjustPvalues@@$$FYA?AV?$vector@NV?$allocator@N@std@@@std@@AAV12@@Z)", auf das in Funktion ""private: bool __thiscall TreeSurvival::findBestSplitMaxstat(unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?findBestSplitMaxstat@TreeSurvival@@$$FAAE_NIAAV?$vector@IV?$allocator@I@std@@@std@@@Z)" verwiesen wird.
     1>TreeRegression.obj : error LNK2028: Nicht aufgel÷stes Token (0A000517) ""class std::vector<double,class std::allocator<double> > __cdecl adjustPvalues(class std::vector<double,class std::allocator<double> > &)" (?adjustPvalues@@$$FYA?AV?$vector@NV?$allocator@N@std@@@std@@AAV12@@Z)", auf das in Funktion ""private: bool __thiscall TreeRegression::findBestSplitMaxstat(unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?findBestSplitMaxstat@TreeRegression@@$$FAAE_NIAAV?$vector@IV?$allocator@I@std@@@std@@@Z)" verwiesen wird.
     1>TreeSurvival.obj : error LNK2020: Nicht aufgel÷stes Token (0A0005E1) "void __cdecl maxstat(class std::vector<double,class std::allocator<double> > &,class std::vector<double,class std::allocator<double> > &,class std::vector<unsigned int,class std::allocator<unsigned int> > &,double &,double &,double,double)" (?maxstat@@$$FYAXAAV?$vector@NV?$allocator@N@std@@@std@@0AAV?$vector@IV?$allocator@I@std@@@2@AAN2NN@Z).
     1>TreeRegression.obj : error LNK2028: Nicht aufgel÷stes Token (0A000538) ""void __cdecl maxstat(class std::vector<double,class std::allocator<double> > &,class std::vector<double,class std::allocator<double> > &,class std::vector<unsigned int,class std::allocator<unsigned int> > &,double &,double &,double,double)" (?maxstat@@$$FYAXAAV?$vector@NV?$allocator@N@std@@@std@@0AAV?$vector@IV?$allocator@I@std@@@2@AAN2NN@Z)", auf das in Funktion ""private: bool __thiscall TreeRegression::findBestSplitMaxstat(unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?findBestSplitMaxstat@TreeRegression@@$$FAAE_NIAAV?$vector@IV?$allocator@I@std@@@std@@@Z)" verwiesen wird.
     1>TreeSurvival.obj : error LNK2028: Nicht aufgel÷stes Token (0A00061C) ""double __cdecl maxstatPValueLau94(double,double,double,unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?maxstatPValueLau94@@$$FYANNNNIAAV?$vector@IV?$allocator@I@std@@@std@@@Z)", auf das in Funktion ""private: bool __thiscall TreeSurvival::findBestSplitMaxstat(unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?findBestSplitMaxstat@TreeSurvival@@$$FAAE_NIAAV?$vector@IV?$allocator@I@std@@@std@@@Z)" verwiesen wird.
     1>TreeRegression.obj : error LNK2028: Nicht aufgel÷stes Token (0A000572) ""double __cdecl maxstatPValueLau94(double,double,double,unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?maxstatPValueLau94@@$$FYANNNNIAAV?$vector@IV?$allocator@I@std@@@std@@@Z)", auf das in Funktion ""private: bool __thiscall TreeRegression::findBestSplitMaxstat(unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?findBestSplitMaxstat@TreeRegression@@$$FAAE_NIAAV?$vector@IV?$allocator@I@std@@@std@@@Z)" verwiesen wird.
     1>TreeSurvival.obj : error LNK2028: Nicht aufgel÷stes Token (0A000628) ""double __cdecl maxstatPValueLau92(double,double,double)" (?maxstatPValueLau92@@$$FYANNNN@Z)", auf das in Funktion ""double const & __cdecl std::min<double>(double const &,double const &)" (??$min@N@std@@$$FYAABNABN0@Z)" verwiesen wird.
     1>TreeRegression.obj : error LNK2028: Nicht aufgel÷stes Token (0A00057E) ""double __cdecl maxstatPValueLau92(double,double,double)" (?maxstatPValueLau92@@$$FYANNNN@Z)", auf das in Funktion ""private: bool __thiscall TreeRegression::findBestSplitMaxstat(unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?findBestSplitMaxstat@TreeRegression@@$$FAAE_NIAAV?$vector@IV?$allocator@I@std@@@std@@@Z)" verwiesen wird.
     1>TreeSurvival.obj : error LNK2020: Nicht aufgel÷stes Token (0A000691) "class std::vector<unsigned int,class std::allocator<unsigned int> > __cdecl numSamplesLeftOfCutpoint(class std::vector<double,class std::allocator<double> > &,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?numSamplesLeftOfCutpoint@@$$FYA?AV?$vector@IV?$allocator@I@std@@@std@@AAV?$vector@NV?$allocator@N@std@@@2@AAV12@@Z).
     1>TreeRegression.obj : error LNK2028: Nicht aufgel÷stes Token (0A0005E7) ""class std::vector<unsigned int,class std::allocator<unsigned int> > __cdecl numSamplesLeftOfCutpoint(class std::vector<double,class std::allocator<double> > &,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?numSamplesLeftOfCutpoint@@$$FYA?AV?$vector@IV?$allocator@I@std@@@std@@AAV?$vector@NV?$allocator@N@std@@@2@AAV12@@Z)", auf das in Funktion ""private: bool __thiscall TreeRegression::findBestSplitMaxstat(unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?findBestSplitMaxstat@TreeRegression@@$$FAAE_NIAAV?$vector@IV?$allocator@I@std@@@std@@@Z)" verwiesen wird.
     1>TreeSurvival.obj : error LNK2028: Nicht aufgel÷stes Token (0A0005EF) ""double __cdecl computeConcordanceIndex(class Data *,class std::vector<double,class std::allocator<double> > &,unsigned int,unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?computeConcordanceIndex@@$$FYANPAVData@@AAV?$vector@NV?$allocator@N@std@@@std@@IIAAV?$vector@IV?$allocator@I@std@@@3@@Z)", auf das in Funktion ""private: virtual double __thiscall TreeSurvival::computePredictionAccuracyInternal(void)" (?computePredictionAccuracyInternal@TreeSurvival@@$$FEAENXZ)" verwiesen wird.
     1>TreeSurvival.obj : error LNK2028: Nicht aufgel÷stes Token (0A00063A) ""double __cdecl maxstatPValueUnadjusted(double)" (?maxstatPValueUnadjusted@@$$FYANN@Z)", auf das in Funktion ""private: bool __thiscall TreeSurvival::findBestSplitMaxstat(unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?findBestSplitMaxstat@TreeSurvival@@$$FAAE_NIAAV?$vector@IV?$allocator@I@std@@@std@@@Z)" verwiesen wird.
     1>TreeSurvival.obj : error LNK2028: Nicht aufgel÷stes Token (0A00066F) ""class std::vector<double,class std::allocator<double> > __cdecl logrankScores(class std::vector<double,class std::allocator<double> > &,class std::vector<double,class std::allocator<double> > &)" (?logrankScores@@$$FYA?AV?$vector@NV?$allocator@N@std@@@std@@AAV12@0@Z)", auf das in Funktion ""private: bool __thiscall TreeSurvival::findBestSplitMaxstat(unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?findBestSplitMaxstat@TreeSurvival@@$$FAAE_NIAAV?$vector@IV?$allocator@I@std@@@std@@@Z)" verwiesen wird.
     1>Data.obj : error LNK2019: Verweis auf nicht aufgel÷stes externes Symbol ""unsigned int __cdecl roundToNextMultiple(unsigned int,unsigned int)" (?roundToNextMultiple@@$$FYAIII@Z)" in Funktion ""public: void __thiscall Data::addSparseData(unsigned char *,unsigned int)" (?addSparseData@Data@@$$FQAEXPAEI@Z)".
     1>ForestSurvival.obj : error LNK2001: Nicht aufgel÷stes externes Symbol ""void __cdecl equalSplit(class std::vector<unsigned int,class std::allocator<unsigned int> > &,unsigned int,unsigned int,unsigned int)" (?equalSplit@@YAXAAV?$vector@IV?$allocator@I@std@@@std@@III@Z)".
     1>Forest.obj : error LNK2001: Nicht aufgel÷stes externes Symbol ""void __cdecl equalSplit(class std::vector<unsigned int,class std::allocator<unsigned int> > &,unsigned int,unsigned int,unsigned int)" (?equalSplit@@YAXAAV?$vector@IV?$allocator@I@std@@@std@@III@Z)".
     1>ForestClassification.obj : error LNK2001: Nicht aufgel÷stes externes Symbol ""void __cdecl equalSplit(class std::vector<unsigned int,class std::allocator<unsigned int> > &,unsigned int,unsigned int,unsigned int)" (?equalSplit@@YAXAAV?$vector@IV?$allocator@I@std@@@std@@III@Z)".
     1>ForestProbability.obj : error LNK2001: Nicht aufgel÷stes externes Symbol ""void __cdecl equalSplit(class std::vector<unsigned int,class std::allocator<unsigned int> > &,unsigned int,unsigned int,unsigned int)" (?equalSplit@@YAXAAV?$vector@IV?$allocator@I@std@@@std@@III@Z)".
     1>ForestRegression.obj : error LNK2001: Nicht aufgel÷stes externes Symbol ""void __cdecl equalSplit(class std::vector<unsigned int,class std::allocator<unsigned int> > &,unsigned int,unsigned int,unsigned int)" (?equalSplit@@YAXAAV?$vector@IV?$allocator@I@std@@@std@@III@Z)".
     1>Forest.obj : error LNK2019: Verweis auf nicht aufgel÷stes externes Symbol ""void __cdecl loadDoubleVectorFromFile(class std::vector<double,class std::allocator<double> > &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)" (?loadDoubleVectorFromFile@@YAXAAV?$vector@NV?$allocator@N@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z)" in Funktion ""public: void __thiscall Forest::initCpp(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,enum MemoryMode,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,class std::basic_ostream<char,struct std::char_traits<char> > *,unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,enum ImportanceMode,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > &,bool,enum SplitRule,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,double,double,double,bool,enum PredictionType)" (?initCpp@Forest@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4MemoryMode@@0I0IPAV?$basic_ostream@DU?$char_traits@D@std@@@3@II0W4ImportanceMode@@I0AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@0_N45W4SplitRule@@05NNN5W4PredictionType@@@Z)".
     1>Forest.obj : error LNK2019: Verweis auf nicht aufgel÷stes externes Symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl beautifyTime(unsigned int)" (?beautifyTime@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z)" in Funktion ""protected: void __thiscall Forest::showProgress(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)" (?showProgress@Forest@@IAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z)".
     1>Forest.obj : error LNK2019: Verweis auf nicht aufgel÷stes externes Symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl checkUnorderedVariables(class Data *,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >)" (?checkUnorderedVariables@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVData@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z)" in Funktion ""public: void __thiscall Forest::initCpp(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,enum MemoryMode,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,unsigned int,class std::basic_ostream<char,struct std::char_traits<char> > *,unsigned int,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,enum ImportanceMode,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > &,bool,enum SplitRule,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool,double,double,double,bool,enum PredictionType)" (?initCpp@Forest@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4MemoryMode@@0I0IPAV?$basic_ostream@DU?$char_traits@D@std@@@3@II0W4ImportanceMode@@I0AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@0_N45W4SplitRule@@05NNN5W4PredictionType@@@Z)".
     1>ForestClassification.obj : error LNK2019: Verweis auf nicht aufgel÷stes externes Symbol ""double __cdecl mostFrequentValue(class std::unordered_map<double,unsigned int,struct std::hash<double>,struct std::equal_to<double>,class std::allocator<struct std::pair<double const ,unsigned int> > > &,class std::mersenne_twister_engine<unsigned __int64,64,312,156,31,-5403634167711393303,29,6148914691236517205,17,8202884508482404352,37,-2270628950310912,43,6364136223846793005>)" (?mostFrequentValue@@YANAAV?$unordered_map@NIU?$hash@N@std@@U?$equal_to@N@2@V?$allocator@U?$pair@$$CBNI@std@@@2@@std@@V?$mersenne_twister_engine@_K$0EA@$0BDI@$0JM@$0BP@$0?EKPNJAKFFGJJOGBH@$0BN@$0FFFFFFFFFFFFFFFF@$0BB@$0HBNGHPPPONKGAAAA@$0CF@$0?IBBCAAAAAAAAA@$0CL@$0FIFBPECNEMJFHPCN@@2@@Z)" in Funktion ""public: virtual void __thiscall ForestClassification::predictInternal(void)" (?predictInternal@ForestClassification@@UAEXXZ)".
     1>ForestSurvival.obj : error LNK2019: Verweis auf nicht aufgel÷stes externes Symbol ""double __cdecl computeConcordanceIndex(class Data *,class std::vector<double,class std::allocator<double> > &,unsigned int,unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?computeConcordanceIndex@@YANPAVData@@AAV?$vector@NV?$allocator@N@std@@@std@@IIAAV?$vector@IV?$allocator@I@std@@@3@@Z)" in Funktion ""private: virtual void __thiscall ForestSurvival::computePredictionErrorInternal(void)" (?computePredictionErrorInternal@ForestSurvival@@EAEXXZ)".
     1>Tree.obj : error LNK2019: Verweis auf nicht aufgel÷stes externes Symbol ""void __cdecl shuffleAndSplit(class std::vector<unsigned int,class std::allocator<unsigned int> > &,class std::vector<unsigned int,class std::allocator<unsigned int> > &,unsigned int,unsigned int,class std::mersenne_twister_engine<unsigned __int64,64,312,156,31,-5403634167711393303,29,6148914691236517205,17,8202884508482404352,37,-2270628950310912,43,6364136223846793005>)" (?shuffleAndSplit@@$$FYAXAAV?$vector@IV?$allocator@I@std@@@std@@0IIV?$mersenne_twister_engine@_K$0EA@$0BDI@$0JM@$0BP@$0?EKPNJAKFFGJJOGBH@$0BN@$0FFFFFFFFFFFFFFFF@$0BB@$0HBNGHPPPONKGAAAA@$0CF@$0?IBBCAAAAAAAAA@$0CL@$0FIFBPECNEMJFHPCN@@2@@Z)" in Funktion ""protected: void __thiscall Tree::bootstrapWithoutReplacement(void)" (?bootstrapWithoutReplacement@Tree@@$$FIAEXXZ)".
     1>Tree.obj : error LNK2019: Verweis auf nicht aufgel÷stes externes Symbol ""void __cdecl drawWithoutReplacementWeighted(class std::vector<unsigned int,class std::allocator<unsigned int> > &,class std::mersenne_twister_engine<unsigned __int64,64,312,156,31,-5403634167711393303,29,6148914691236517205,17,8202884508482404352,37,-2270628950310912,43,6364136223846793005> &,unsigned int,unsigned int,class std::vector<double,class std::allocator<double> > &)" (?drawWithoutReplacementWeighted@@$$FYAXAAV?$vector@IV?$allocator@I@std@@@std@@AAV?$mersenne_twister_engine@_K$0EA@$0BDI@$0JM@$0BP@$0?EKPNJAKFFGJJOGBH@$0BN@$0FFFFFFFFFFFFFFFF@$0BB@$0HBNGHPPPONKGAAAA@$0CF@$0?IBBCAAAAAAAAA@$0CL@$0FIFBPECNEMJFHPCN@@2@IIAAV?$vector@NV?$allocator@N@std@@@2@@Z)" in Funktion ""protected: void __thiscall Tree::bootstrapWithoutReplacementWeighted(void)" (?bootstrapWithoutReplacementWeighted@Tree@@$$FIAEXXZ)".
     1>Tree.obj : error LNK2019: Verweis auf nicht aufgel÷stes externes Symbol ""void __cdecl drawWithoutReplacementSkip(class std::vector<unsigned int,class std::allocator<unsigned int> > &,class std::mersenne_twister_engine<unsigned __int64,64,312,156,31,-5403634167711393303,29,6148914691236517205,17,8202884508482404352,37,-2270628950310912,43,6364136223846793005> &,unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &,unsigned int)" (?drawWithoutReplacementSkip@@$$FYAXAAV?$vector@IV?$allocator@I@std@@@std@@AAV?$mersenne_twister_engine@_K$0EA@$0BDI@$0JM@$0BP@$0?EKPNJAKFFGJJOGBH@$0BN@$0FFFFFFFFFFFFFFFF@$0BB@$0HBNGHPPPONKGAAAA@$0CF@$0?IBBCAAAAAAAAA@$0CL@$0FIFBPECNEMJFHPCN@@2@I0I@Z)" in Funktion ""protected: void __thiscall Tree::createPossibleSplitVarSubset(class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?createPossibleSplitVarSubset@Tree@@$$FIAEXAAV?$vector@IV?$allocator@I@std@@@std@@@Z)".
     1>Tree.obj : error LNK2019: Verweis auf nicht aufgel÷stes externes Symbol ""void __cdecl drawWithoutReplacementWeighted(class std::vector<unsigned int,class std::allocator<unsigned int> > &,class std::mersenne_twister_engine<unsigned __int64,64,312,156,31,-5403634167711393303,29,6148914691236517205,17,8202884508482404352,37,-2270628950310912,43,6364136223846793005> &,class std::vector<unsigned int,class std::allocator<unsigned int> > &,unsigned int,class std::vector<double,class std::allocator<double> > &)" (?drawWithoutReplacementWeighted@@$$FYAXAAV?$vector@IV?$allocator@I@std@@@std@@AAV?$mersenne_twister_engine@_K$0EA@$0BDI@$0JM@$0BP@$0?EKPNJAKFFGJJOGBH@$0BN@$0FFFFFFFFFFFFFFFF@$0BB@$0HBNGHPPPONKGAAAA@$0CF@$0?IBBCAAAAAAAAA@$0CL@$0FIFBPECNEMJFHPCN@@2@0IAAV?$vector@NV?$allocator@N@std@@@2@@Z)" in Funktion ""protected: void __thiscall Tree::createPossibleSplitVarSubset(class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?createPossibleSplitVarSubset@Tree@@$$FIAEXAAV?$vector@IV?$allocator@I@std@@@std@@@Z)".
     1>TreeClassification.obj : error LNK2019: Verweis auf nicht aufgel÷stes externes Symbol ""double __cdecl mostFrequentValue(class std::unordered_map<double,unsigned int,struct std::hash<double>,struct std::equal_to<double>,class std::allocator<struct std::pair<double const ,unsigned int> > > &,class std::mersenne_twister_engine<unsigned __int64,64,312,156,31,-5403634167711393303,29,6148914691236517205,17,8202884508482404352,37,-2270628950310912,43,6364136223846793005>)" (?mostFrequentValue@@$$FYANAAV?$unordered_map@NIU?$hash@N@std@@U?$equal_to@N@2@V?$allocator@U?$pair@$$CBNI@std@@@2@@std@@V?$mersenne_twister_engine@_K$0EA@$0BDI@$0JM@$0BP@$0?EKPNJAKFFGJJOGBH@$0BN@$0FFFFFFFFFFFFFFFF@$0BB@$0HBNGHPPPONKGAAAA@$0CF@$0?IBBCAAAAAAAAA@$0CL@$0FIFBPECNEMJFHPCN@@2@@Z)" in Funktion ""public: double __thiscall TreeClassification::estimate(unsigned int)" (?estimate@TreeClassification@@$$FQAENI@Z)".
     1>TreeRegression.obj : error LNK2019: Verweis auf nicht aufgel÷stes externes Symbol ""void __cdecl maxstat(class std::vector<double,class std::allocator<double> > &,class std::vector<double,class std::allocator<double> > &,class std::vector<unsigned int,class std::allocator<unsigned int> > &,double &,double &,double,double)" (?maxstat@@$$FYAXAAV?$vector@NV?$allocator@N@std@@@std@@0AAV?$vector@IV?$allocator@I@std@@@2@AAN2NN@Z)" in Funktion ""private: bool __thiscall TreeRegression::findBestSplitMaxstat(unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?findBestSplitMaxstat@TreeRegression@@$$FAAE_NIAAV?$vector@IV?$allocator@I@std@@@std@@@Z)".
     1>TreeSurvival.obj : error LNK2001: Nicht aufgel÷stes externes Symbol ""void __cdecl maxstat(class std::vector<double,class std::allocator<double> > &,class std::vector<double,class std::allocator<double> > &,class std::vector<unsigned int,class std::allocator<unsigned int> > &,double &,double &,double,double)" (?maxstat@@$$FYAXAAV?$vector@NV?$allocator@N@std@@@std@@0AAV?$vector@IV?$allocator@I@std@@@2@AAN2NN@Z)".
     1>TreeRegression.obj : error LNK2019: Verweis auf nicht aufgel÷stes externes Symbol ""class std::vector<unsigned int,class std::allocator<unsigned int> > __cdecl numSamplesLeftOfCutpoint(class std::vector<double,class std::allocator<double> > &,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?numSamplesLeftOfCutpoint@@$$FYA?AV?$vector@IV?$allocator@I@std@@@std@@AAV?$vector@NV?$allocator@N@std@@@2@AAV12@@Z)" in Funktion ""private: bool __thiscall TreeRegression::findBestSplitMaxstat(unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?findBestSplitMaxstat@TreeRegression@@$$FAAE_NIAAV?$vector@IV?$allocator@I@std@@@std@@@Z)".
     1>TreeSurvival.obj : error LNK2001: Nicht aufgel÷stes externes Symbol ""class std::vector<unsigned int,class std::allocator<unsigned int> > __cdecl numSamplesLeftOfCutpoint(class std::vector<double,class std::allocator<double> > &,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?numSamplesLeftOfCutpoint@@$$FYA?AV?$vector@IV?$allocator@I@std@@@std@@AAV?$vector@NV?$allocator@N@std@@@2@AAV12@@Z)".
     1>TreeRegression.obj : error LNK2019: Verweis auf nicht aufgel÷stes externes Symbol ""double __cdecl maxstatPValueLau92(double,double,double)" (?maxstatPValueLau92@@$$FYANNNN@Z)" in Funktion ""private: bool __thiscall TreeRegression::findBestSplitMaxstat(unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?findBestSplitMaxstat@TreeRegression@@$$FAAE_NIAAV?$vector@IV?$allocator@I@std@@@std@@@Z)".
     1>TreeSurvival.obj : error LNK2001: Nicht aufgel÷stes externes Symbol ""double __cdecl maxstatPValueLau92(double,double,double)" (?maxstatPValueLau92@@$$FYANNNN@Z)".
     1>TreeRegression.obj : error LNK2019: Verweis auf nicht aufgel÷stes externes Symbol ""double __cdecl maxstatPValueLau94(double,double,double,unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?maxstatPValueLau94@@$$FYANNNNIAAV?$vector@IV?$allocator@I@std@@@std@@@Z)" in Funktion ""private: bool __thiscall TreeRegression::findBestSplitMaxstat(unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?findBestSplitMaxstat@TreeRegression@@$$FAAE_NIAAV?$vector@IV?$allocator@I@std@@@std@@@Z)".
     1>TreeSurvival.obj : error LNK2001: Nicht aufgel÷stes externes Symbol ""double __cdecl maxstatPValueLau94(double,double,double,unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?maxstatPValueLau94@@$$FYANNNNIAAV?$vector@IV?$allocator@I@std@@@std@@@Z)".
     1>TreeRegression.obj : error LNK2019: Verweis auf nicht aufgel÷stes externes Symbol ""class std::vector<double,class std::allocator<double> > __cdecl adjustPvalues(class std::vector<double,class std::allocator<double> > &)" (?adjustPvalues@@$$FYA?AV?$vector@NV?$allocator@N@std@@@std@@AAV12@@Z)" in Funktion ""private: bool __thiscall TreeRegression::findBestSplitMaxstat(unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?findBestSplitMaxstat@TreeRegression@@$$FAAE_NIAAV?$vector@IV?$allocator@I@std@@@std@@@Z)".
     1>TreeSurvival.obj : error LNK2001: Nicht aufgel÷stes externes Symbol ""class std::vector<double,class std::allocator<double> > __cdecl adjustPvalues(class std::vector<double,class std::allocator<double> > &)" (?adjustPvalues@@$$FYA?AV?$vector@NV?$allocator@N@std@@@std@@AAV12@@Z)".
     1>TreeSurvival.obj : error LNK2019: Verweis auf nicht aufgel÷stes externes Symbol ""double __cdecl computeConcordanceIndex(class Data *,class std::vector<double,class std::allocator<double> > &,unsigned int,unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?computeConcordanceIndex@@$$FYANPAVData@@AAV?$vector@NV?$allocator@N@std@@@std@@IIAAV?$vector@IV?$allocator@I@std@@@3@@Z)" in Funktion ""private: virtual double __thiscall TreeSurvival::computePredictionAccuracyInternal(void)" (?computePredictionAccuracyInternal@TreeSurvival@@$$FEAENXZ)".
     1>TreeSurvival.obj : error LNK2019: Verweis auf nicht aufgel÷stes externes Symbol ""class std::vector<double,class std::allocator<double> > __cdecl logrankScores(class std::vector<double,class std::allocator<double> > &,class std::vector<double,class std::allocator<double> > &)" (?logrankScores@@$$FYA?AV?$vector@NV?$allocator@N@std@@@std@@AAV12@0@Z)" in Funktion ""private: bool __thiscall TreeSurvival::findBestSplitMaxstat(unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?findBestSplitMaxstat@TreeSurvival@@$$FAAE_NIAAV?$vector@IV?$allocator@I@std@@@std@@@Z)".
     1>TreeSurvival.obj : error LNK2019: Verweis auf nicht aufgel÷stes externes Symbol ""double __cdecl maxstatPValueUnadjusted(double)" (?maxstatPValueUnadjusted@@$$FYANN@Z)" in Funktion ""private: bool __thiscall TreeSurvival::findBestSplitMaxstat(unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > &)" (?findBestSplitMaxstat@TreeSurvival@@$$FAAE_NIAAV?$vector@IV?$allocator@I@std@@@std@@@Z)".
     1>C:\Users\Martin\Documents\Visual Studio 2013\Projects\netica\SLRS\Debug\RDF.dll : fatal error LNK1120: 39 nicht aufgel÷ste Externe
     1>Die Erstellung des Projekts "C:\Users\Martin\Documents\Visual Studio 2013\Projects\netica\SLRS\RDF\RDF.vcxproj" ist abgeschlossen, Rebuild Ziel(e) -- FEHLER.

Fehler beim Buildvorgang.

Verstrichene Zeit 00:00:11.01
